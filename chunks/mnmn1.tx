\section
[$M(n)/M(n)/1$ Queue]
{$\mathbf{M(n)/M(n)/1}$ Queue}
\label{sec:mnmn1}

As it turns out, many more single-server queueing situations can be
modeled and analyzed by making a judicious choice of $\lambda(n)$ and
$\mu(n)$ in~\eqref{eq:25}, to wit,
$ \lambda(n) p(n) = \mu(n+1)p(n+1)$. For these queueing systems we
just present the results. In the exercises we ask you to derive the
formulas.

For the $M/M/1/K$, i.e., a system that cannot contain more than $K$ jobs, take
  \begin{align*}
    \lambda(n) &= 
  \begin{cases}
    \lambda, &\text{ if } n \leq K, \\
    0, &\text{ if } n > K, \\
  \end{cases} \\
\mu(n) &= \mu.
  \end{align*}
  Then,
\begin{subequations}\label{eq:8}
 \begin{align}
p(n) &=  \frac{\rho^n}G\\
G &= \frac{1-\rho^{K+1}}{1-\rho}, \\
P_{\text{loss}} &= \P{L=K} = \frac{\rho^K}G.
\end{align}
\end{subequations}


For the $M/M/c$ queue we can take
  \begin{align*}
\lambda(n) &= \lambda, \\
    \mu(n) &= 
  \begin{cases}
    n\mu, &\text{ if } n < c, \\
    c\mu, &\text{ if } n \geq c.
  \end{cases}
  \end{align*}
This model is also known as the \recall{Erlang $C$}-formula. 
Define the load as 
\begin{subequations}\label{eq:9}
\begin{equation*}
  \rho = \frac{\lambda}{c\mu}.
\end{equation*}
  Then,
 \begin{align}
p(n) &= \frac{1}G \frac{(c\rho)^n}{n!}, n=0,\ldots, c-1 \\
p(n) &= \frac{1}G \frac{c^c\rho^n}{c!}, n=c,c+1, \ldots \\
G &=\sum_{n=0}^{c-1} \frac{(c\rho)^n}{n!} + \frac{(c\rho)^c}{(1-\rho)c!}, \label{eq:501}\\
\E{L_Q} &= \sum_{n=c+1}^\infty (n-c) p(n) = \frac{(c\rho)^c}{c! G}\frac{\rho}{(1-\rho)^2}, \\ 
\E{L_S} &= \sum_{n=01}^{c-1}n p(n) = \frac{\lambda}\mu.
\end{align}
\end{subequations}
By taking the limit $c\to\infty$ we obtain the $M/M/\infty$ queue, in which case
\begin{subequations}
 \begin{align} 
\rho &= \frac{\lambda}\mu\\
p(n) &=  \frac 1 G\frac{\rho^n}{n!}\\
G &= e^{\rho} \\
\E{L} &= \E{L_S} = \rho.
\end{align}
\end{subequations}

A model, often used to determine the number of beds at hospitals, is
the $M/M/c/c$ model, also known as the Erlang $B$-formula; here jobs cannot be in queue, only in service, and the system has $c$ servers.


Finally, we consider queues with \recall{balking}, that is, queues in
which customers leave when they find the queue too long at the moment
they arrive. A simple example model with  customer balking is given by x
  \begin{equation*}
    \lambda(n) = 
  \begin{cases}
    \lambda, &\text{ if } n=0, \\
    \lambda/2, &\text{ if } n=1, \\
    \lambda/4, &\text{ if } n=2, \\
    0, &\text{ if } n > 2, \\
  \end{cases}
  \end{equation*}
and $\mu(n)=\mu$.   

Observe that in the example with balking we made a subtle implicit
assumption; in Section~\ref{sec:poisson-arrivals-see} we elaborate on
this assumption. To make the problem clear, note that balking
customers \emph{decide at the moment they arrive} to either join or
leave; in other words, they decide based on what they `see upon
arrival'. In yet other words, they make decisions based on the state
of the system at arrival moments, not on time-averages. However, the
notion of $p(n)$ is a long-run \emph{time-average}, and is typically
not the same as what customers `see upon arrival'. As a consequence,
the performance measure $\P{L\leq n}$ is not necessarily in accordance
with the perception of customers. To relate these two `views', i.e.,
time-average versus observer-average, we need a new concept,
\emph{PASTA}, to be developed in in Section~\ref{sec:poisson-arrivals-see}.

\begin{question}
Consider the $M/M/2/1$ queue with arrival rate $\lambda$ and
service rate $\mu$. 
\begin{enumerate}
\item Derive the level-crossing equations for this queueing system. 
\item 
Derive a simple and closed form expressions for the state 
   probabilities in steady state. 
 \end{enumerate}
 
 \hint{Find suitable expressions for $\lambda(n)$ and $\mu(n)$ and use
   the level-crossing equations $\lambda(n) p(n) = \mu(n+1)p(n+1)$. }

  \begin{solution}

    \begin{enumerate}
    \item Use this figure. Make sure you understand why $\mu(2)=2\mu$ and so on.
    \begin{center}

\begin{tikzpicture}[->,>=stealth',shorten >=1pt,auto,node distance=1.8cm,
                    semithick]
  \node[state] (0) {$p(0)$} ;
  \node[state] (1) [right of=0] {$p(1)$};
  \node[state] (2) [right of=1] {$p(2)$};
  \node[state] (3) [right of=2] {$p(3)$};

\path 
 (0) edge [bend left] node {$\lambda$} (1)
 (1) edge [bend left] node {$\mu$} (0)
 (1) edge [bend left] node {$\lambda$} (2)
 (2) edge [bend left] node {$2\mu$} (1)
 (2) edge [bend left] node {$\lambda$} (3)
 (3) edge [bend left] node {$2\mu$} (2);
\end{tikzpicture}
      
    \end{center}

From this figure it follows right away that:
    \begin{align*}
   \lambda p(0) &= \mu p(1) \\
   \lambda p(1)  &= 2\mu p(2) \\
   \lambda p(2)  &= 2\mu p(3)\\
    \end{align*}

  \item From the above, with $\rho=\lambda/\mu$: 
    \begin{align*}
      p(1) &= \rho p(0), \\
      p(2) &= (\rho/2) p(1) = (\rho^2/2) p(0), \\
      p(3) &= (\rho/2) p(2) = (\rho^3/4) p(0).
    \end{align*}
Now we normalize to find $p(0)$. Thus, we want that:
\begin{equation*}
  1 = p(0)+p(1)+p(2)+p(3) = p(0)\left(1 + \rho + \frac{\rho^2}2 + \frac{\rho^3}4\right),
\end{equation*}
hence,
\begin{equation*}
p(0) = (1+\rho + \rho^2/2 + \rho^3/4)^{-1}.
\end{equation*}
\end{enumerate}
   \end{solution}
\end{question}


\begin{question}
  \begin{enumerate}
  \item Derive Eq.~\eqref{eq:8}
  \item   Show that as $K\to\infty$, the performance measures of the $M/M/1/K$ converge to those of the $M/M/1$ queue. 
  \end{enumerate}
  \hint{Use that $\sum_{i=0}^n x^i = (1-x^{n+1})/(1-x)$. BTW, is it
    necessary for this expression to be true that $|x|<1$? What should
    you require for $|x|$ when you want to take the limit
    $n\to\infty$?}
  \begin{solution}
Note that 
\begin{equation*}
1 = \sum_{i=0}^K p(i) = p(0)\sum_{i=0}^K \rho^i  = p(0) \frac{1-\rho^{K+1}}{1-\rho}. 
\end{equation*}
Thus, for the normalization constant $G$ we take $G=1/p(0)$ and the result follows. 

    From Eq.~\eqref{eq:8}, $G\to (1-\rho)^{-1}$ as $K\to \infty$.
    Therefore $p(n)=\rho^n/G \to \rho^n(1-\rho)$, and the latter are
    the steady-state probabilities of the $M/M/1$ queue. Finally, if
    the steady state probabilities are the same, the performance
    measures (which are derived from $p(n)$) must be the same.
  \end{solution}
\end{question}

\begin{question}(Multi-server queue with blocking) Consider the
  $M/M/c/c+K$ queue, try to derive the steady state probabilities
  $p(0)$, $p(1), \ldots$. You do not have to compute the normalization
  constant $G$.

\hint{ Use $\lambda(n) p(n) = \mu(n+1)p(n+1)$ and
    find suitable expressions for $\lambda(n)$ and $\mu(n+1)$. }

  \begin{solution}
    $\lambda(n) \equiv \lambda$ for all $n<c+K$. When $n=c+K$,
    $\lambda(n)=0$, since then the system is full, and all arriving
    jobs will be dropped.  When $n\leq c$, $\mu(n)=n \mu$ since only
    $n$ servers are active/occupied when the system contains $n$
    jobs. When $n\geq c$, $\mu(n) = c \mu$. Thus,
    \begin{align*}
      p(n) &= \frac{\lambda}{n\mu} p(n-1) = \frac{(\lambda/\mu)^n}{n!} p(0)=\frac{(k\rho)^n}{n!}p(0), \, n\leq c, \\
      p(n) &= \frac{\lambda}{c\mu} p(n-1) = \frac{c^c \rho^n}{c!} p(0), \, c<n\leq c+K,
    \end{align*}
where $\rho = \lambda/c \mu$.  

The normalization is trivial, numerically at least.
  \end{solution}
\end{question}


\begin{question}
  Derive Eq.\eqref{eq:9}
  \hint{ Use $\lambda(n)p(n) = \mu(n+1)p(n+1)=\min\{c, n+1\}\mu p(n+1)$.}
  \begin{solution}
    \begin{equation*}
      \begin{split}
       p(n+1) 
&= \frac{\lambda}{\mu(n+1)}p(n) 
= \frac{\lambda}{\min\{c, n+1\} \mu }p(n) \\
&= \frac{1}{\min\{c, n+1\}}\frac\lambda\mu p(n) 
= \frac{1}{\min\{c, n+1\}}(c\rho) p(n) \\
&= \frac{1}{\min\{c, n+1\}\min\{c, n\}}(c\rho)^2 p(n-1) 
= \frac{1}{\Pi_{k=1}^{n+1}\min\{c, k\}}\rho^{n+1} p(0).
      \end{split}
    \end{equation*}
Write $p(0) = 1/G$.  

For  $G$, 
\begin{equation*}
  \begin{split}
  G 
&= 
\sum_{i=0}^{c-1}\frac{(c\rho)^n}{n!} + 
 \sum_{i=c}^{\infty} \frac{(c\rho)^c}{c!} \rho^{n-c} 
= 
\sum_{i=0}^{c-1}\frac{(c\rho)^n}{n!} + 
\frac{(c\rho)^c}{c!} \sum_{i=c}^{\infty} \rho^n \\
&= 
\sum_{i=0}^{c-1}\frac{(c\rho)^n}{n!} + 
\frac{(c\rho)^c}{c!(1-\rho)}.
  \end{split}
\end{equation*}

Next, 
\begin{equation*}
  \begin{split}
  \E{L_Q} 
&=\sum_{n=c}^\infty (n-c) p(n) 
=\frac{c^c\rho^c}{Gc!} \sum_{n=c}^\infty (n-c) \rho^{n-c} 
=\frac{c^c\rho^c}{Gc!} \sum_{n=0}^\infty n \rho^n.
  \end{split}
\end{equation*}
Then, 
\begin{equation*}
  \begin{split}
  \sum_{n=0}^\infty n \rho^n 
&= \sum_{n=0}^\infty \sum_{i=1}^\infty \1{i\leq n} \rho^n
= \sum_{i=1}^\infty   \sum_{n=0}^\infty \1{i\leq n} \rho^n\\
&= \sum_{i=1}^\infty   \sum_{n=i}^\infty \rho^n
= \sum_{i=1}^\infty   \rho^i \sum_{n=0}^\infty \rho^n\\
&= \frac1{1-\rho} \sum_{i=1}^\infty   \rho^i 
= \frac\rho{1-\rho} \sum_{i=0}^\infty   \rho^i 
= \frac\rho{(1-\rho)^2}.
  \end{split}
\end{equation*}
Observe again that using indicators and Fubinaci's theorem
(interchanging summations/integrals) makes the above computation
painless.

We next show that the expected number of jobs in the system is given
by
    \begin{equation*}
      \E{L} = \sum_{n=0}^{c-1} n p(n) + \sum_{n=c}^{\infty} c p(n).
    \end{equation*}
    This expression is not the easiest to start with. With a slight
    modification the entire derivation becomes easier. I also premultiply by the normalization constant $G$ to get rid of it on the right hand side. 
    \begin{equation*}
      \begin{split}
      G \E{L}
&= G \sum_{n=0}^{c} n p(n) + \sum_{n=c+1}^{\infty} c p(n) \\
&= \sum_{n=1}^{c} n \frac{(c\rho)^n}{n!}  + \sum_{n=c+1}^{\infty} c \frac{c^c\rho^n}{c!} 
= \sum_{n=1}^{c} \frac{(c\rho)^n}{(n-1)!}  + \frac{c^{c+1}}{c!}\sum_{n=c+1}^{\infty} \rho^n\\
&= \sum_{n=0}^{c-1} \frac{(c\rho)^{n+1}}{n!}  + \frac{(c\rho)^{c+1}}{c!}\sum_{n=0}^{\infty} \rho^n
= c\rho \left(\sum_{n=0}^{c-1} \frac{(c\rho)^n}{n!}  + \frac{(c\rho)^{c}}{c!(1-\rho)}\right).
      \end{split}
    \end{equation*}
Observe that the right hand side is precisely equal to $\rho c G$. 

  \end{solution}
\end{question}



\begin{question}[use=false]
  \TBD.  Explain the difference between level crossing and balance
  equations, and the pros and cons of each.
\end{question}

\begin{question}[use=false]
  The ANWB offers roadside assistance to motorists that got stranded
  somewhere along the highway. Suppose that the average repair time
  (including travel time) is 1.5 hour. The ANWB strives to keep the
  average time between receiving a phone call and the actual
  appearance of a mechanic below one hour. Assuming that the average
  travel time to a customer is half an hour, the average waiting time
  must be kept below half an hour. How many mechanics should be
  available if the `arrival rate' of broken cars is $\lambda = 1$ per
  hour? Make a plot of the number of mechanics required as a function
  of $\lambda$ for $\lambda \in [1, 12]$ per hour. 

  Make the assumption that the arrival process of breakdowns is
  Poisson distributed and the repair times are exponentially distributed..
  \begin{solution}
    \TBD
  \end{solution}
\end{question}


\begin{question}
  \begin{enumerate}
  \item Show that the $M/M/c$ queue converges to the $M/M/\infty$ queue as $c\to\infty$. 
\item Show that the $M/M\infty$ queue is stable for any finite $\lambda$. 
\item Why is $\E L=\rho$ for the $M/M/\infty$ queue? 
  \end{enumerate}
\hint{Use that for any $x$, $x^n/n!\to 0$ as $n\to\infty$.}
 \begin{solution}
   \begin{enumerate}
   \item 
   The second term in~\eqref{eq:501} is $(c\rho)^c/c! = (\lambda/\mu)^c/c!$. It is well
   known that $x^c/c!\to 0$ as $c\to \infty$.

 \item    No matter how many jobs are in service, there is always another
   free server available when a new job arrives. Thus, jobs never have
   to wait in queue, and only spend time in service. Since
   $\E S < \infty$ by assumption, jobs spend a finite time (with
   probability one) at a server.
 \item Write $\rho = \lambda /\mu$. Then, from the formulas for the
   $M/M/\infty$ queue, it follows that $p(n) = e^{-\rho} \rho^n/n!$.
   Interestingly, we see that this is equal to $\P{N=n}$ where $N$ is
   a Poisson r.v.  with parameter $\rho$. Thus, the number in the
   system $L$ is Poisson distributed with parameter $\rho$, thus
   $\E L = \rho$.

   Another way to see that $\E L=\rho$ is by noting that in the
   $M/M/\infty$ queue jobs do not interact with each other in the
   queue. When they arrive, there is always a free server
   available. Since work arrives at rate $\rho$, and all jobs are in
   service simultaneously, the average number of busy servers must
   also be $\rho$.
   \end{enumerate}

\end{solution}
\end{question}

\begin{question}[use=false]
  Show that the steady state distribution of the $M/M/K/K$ converges
  to the steady-state distribution of the $M/M/\infty$ queue.
  \begin{solution}
    \TBD.
  \end{solution}
\end{question}

\begin{question}[use=false]
  (Hard, not obligatory.)  Suppose that $p(n,t)$ is the probability
  that the $M/M/\infty$ queue contains $n$ jobs at time $t$. Assume
  that the system starts empty, find a closed form expression for
  $p(n,t)$. 
\begin{solution}\TBD
 \end{solution}
\end{question}


\begin{question}(Hall 5.1) Give two examples of systems that
  ordinarily have a finite buffer size. Give two examples of systems
  that have a finite calling population.
  \begin{solution}
Finite buffer size. Formally the number of customers that fit into a
shop is necessarily finite. This answer, however, is not
intended. Typically, the number of customers in a restaurant is
limited. Example 2: Sometimes call centers reject callers when the system is too busy.

A finite calling population occurs for instance at a factory with a
number of machines. When a machine breaks down, it becomes a (repair)
job at the repair department.  Thus, a break down forms an arrival at
the repair shop.  The mechanics at the repair department form a set of
parallel servers. Typically, the number of machines quite small, 10 or
so, and when a machine is `down', i.e., broken, it cannot break again.
Hence, when 2, say, machines are in repair, the number of `customers'
that can arrive to the queueing system is only 8. 
  \end{solution}
\end{question}

\begin{question}
 In what way is a queueing system with balking, at level $b$
    say, different from a queueing system with finite calling
    population of size $b$? 
\begin{solution}
 In a queueing system with balking, customers may decide to
    balk at a level $b$. Thus, whether only $b$ customers are admitted
    to the system (i.e., blocked), or balk at level $b$, the effect is
    the same: the number of people in the system remains at or below
    $b$. However, a fraction of customer may already balk at lower
    levels, like in the example above, so that the arrival stream is
    `thinned' due to balking customers. In that respect, a queueing
    system with balking behaves differently.
\end{solution}
\end{question}




\begin{question}[use=false]
  (Hall 5.21) The queueing operator of the previous problem has
  decided to institute a policy whereby employees are removed from
  service, to perform cleanup work, whenever they complete service and
  no one is in queue. Employees are brought back into service when the
  number of customers in queue, per server, exceed two. Estimate
  $\E W_Q$, the interruption rate, the expected time between
  interruption, and the expected number of busy servers. 
  \begin{solution}
\TBD. 
    This is an interesting exercise. This policy is a so-called
$N$-policy: as soon as the server becomes idle, remove the
server from the queue and let him/her do something useful, when the
queue hits/crosses some threshold (in this case, 2) call it back to
start serving customers. This policy is one in a class of so-called
threshold policies. One of the challenges for such policies is compute
optimal threshold levels.

In Chapter 8 of Ross, Introduction to Probability Models, this problem
is also analyzed. With a bit of effort you can study this analysis.

First copy some data from the previous problem.


\lstinputlisting{/home/nicky/Dropbox/nicky/vakken/qsim/queueing_book/chunks/mnmn1_1.tex}


To estimate $\E L_Q$ I use Figure 5.10. Using the line $rho =
2$, as here $\rho = 11/6 \approx 2$, and $K=2$, we see
that $L_q \approx 3$. Hence $W_q = 3/11 \approx 3/12 =
1/4$ hour (note that all units are in hours here).

The interruption rate $I$ follows from Figure 5.11. Reading
$K=2$ we see that $I\approx 0.1$. The interruption rate
must then be (by PASTA) the arrival rate times the steady state
interruption probability, i.e., $\lambda I = 11\cdot 0.1 = 1.1$
per hour.

Finally, $B \approx 2$, as follows from Figure 5.12.

To find out whether this is a good policy, in particular from the
customers point of view, we have to compare $W_q$ under this
policy to the queueing time as computed in Problem 11. This tell us
that, in Problem 11, $L_q = 9.6$ and $W_q = 0.9$ hours.
This is unexpected, at least at first. Why is the difference so large?

It must be because the model of Problem 21 assumes that the number of
available servers is unlimited. Hence, any time the queue upcrosses the
threshold $K=2$, an extra server is called. Thus, even though in
both cases the number of busy servers is 2, (i.e., $B\approx 2$
here, and two servers (the M/M/2 queue ) in Problem 11), more server
capacity can be added during busy times under the threshold policy
than under the policy with a fixed number of servers (i.e., the M/M/2
queue).

  \end{solution}
\end{question}


\begin{question}(Systems with finite calling population)
  \begin{enumerate}
  \item Derive the steady state probabilities $p(n)$ for a
    single-server queue with a finite calling population with $N$
    members, i.e., jobs that are in service cannot arrive to the system.
  \item Check the answer you obtained for the cases $N=1$ and
    $N=2$. Interpret the results.
  \item Derive the steady state probabilities $p(n)$ for a queue with
    a finite calling population with $N$ members and $N$ servers,
    i.e., the number of servers in the queueing system is equal the
    size of the calling population.
  \end{enumerate}
  
    \hint{Use $\lambda(n) p(n) = \mu(n+1)p(n+1)$, and realize that for
      this case $\lambda(n) = (N-n)\lambda$ and $\mu(n) = \mu$.}
    \begin{solution}
1) Take $\lambda(n) = (N-n)\lambda$ and $\mu(n) = \mu$, and solve
    Eq.~\eqref{eq:25} and \eqref{eq:20}.  Thus: 
    \begin{equation*}
      \begin{split}
       p(n+1) 
& = \frac{(N-n)\lambda}\mu p(n) 
 = \rho (N-n) p(n) \\
& = \rho^2 (N-n)(N-(n-1))p(n-1) \\
& = \rho^3 (N-n)(N-(n-1))(N-(n-2)) p(n-2) \\
& = \rho^{n+1} (N-n)(N-(n-1))\cdots(N-(0)) p(0) \\
&= \rho^{n+1} \frac{N!}{(N-(n+1))!}p(0). 
      \end{split}
    \end{equation*}
    Next, we need to normalize this. Observe that
    $p(N+1)=P(N+2) = \ldots = 0$ since there are just $N$ customers,
    so that the system can never contain more than $N$
    customers. Thus, we want $p(0)$ to be such that
\begin{equation*}
  1 = \sum_{n=0}^N p(n) = p(0) \sum_{n=0}^N \rho^n \frac{N!}{(N-n)!}
\end{equation*}
We see from this that $p(0)$ times some constant must be $1$. Hence, dividing by this constant, we get 
\begin{equation*}
  p(0) = \left(\sum_{n=0}^N \rho^n \frac{N!}{(N-n)!}\right)^{-1}.
\end{equation*}
I asked WolframAlpha to simplify this, but the answer I got was not particularly revealing. 

2) \tbd

3)   Take $\lambda(n) = (N-n)\lambda$ and $\mu(n) = n \mu$. Then 
    \begin{equation*}
      \begin{split}
      p(n+1) 
&= \frac{\lambda(n)}{\mu(n+1)} p(n) 
= \frac{(N-n)\lambda}{(n+1)\mu} p(n) 
= \frac{(N-n)(N-(n-1))}{(n+1)n}\frac{\lambda^2}{\mu^2} p(n-1) \\
&= \frac{N!}{(N-(n+1))!}\frac1{(n+1)!}\rho^{n+1} p(0) 
  = {N \choose n+1}\rho^{n+1} p(0).
      \end{split}
    \end{equation*}
    Hence, after normalization, i.e., requiring that $p(0)$ is such
    that $\sum_{n=0}^N p(n) = 1$, so that $p(0) = \left(\sum_{k=0}^N \rho^k { N \choose k} \right)^{-1}$, the final result becomes
\begin{equation*}
  p(n) = \frac{\rho^n {N \choose n}}{\sum_{k=0}^N \rho^k {N \choose k}}.
\end{equation*}
    \end{solution}
\end{question}


%%% Local Variables:
%%% mode: latex
%%% TeX-master: "book"
%%% End:
